#=== bspwm hotkeys ===
# Close window
super + q
	bspc  node -c

# Kill window
super + shift + q
	bspc  node -k

# Toggle tiling mode of window
super + shift + t
	bspc node -t {pseudo_tiled,tiled}
super + t
	{bspc node -t floating && window-placer $(bspc query -T -d | grep -o '"state":"floating"' | wc -l),bspc node -t tiled}
# Force all windows of the desktop to tile
super + ctrl + t
	bspcp tile

# Toggle fullscreen
super + shift + f 
	bspc node -t {fullscreen,tiled}	

# Try to keep size and position of the selected window
super + o
	bspc node -g private

# Make window sticky
super + i
	bspc node -g sticky

# Lock a window from closing
super + Escape
	bspc node -g locked 

# Map or unmap windows (functional equivalent of "minimize")
super + c
    whid dmenu

super + shift + c
    whid hide

super + ctrl + c
    whid last

# Presel window for splitting in certain direction
alt + ctrl + {a,s,w,d}
	bspc node -p \~{west,south,north,east} -i

# Set splitting ratio of windows
alt + ctrl + {1-9}
	bspc node -o 0.{1-9}
		
# Move current window to largest space or preselected area if there is one.
super + Return
    windowpromoter
	
# go (Shift=move) to desktop (and focus the monitor that the desktop is located on. Bspwm style)
super + {_,shift + }{1-9,0}
    bspc {desktop -f,node -d} ^{1-9,10}

# Select previous / next desktop
super + {comma,period}
	bspc desktop -f {prev.occupied,next.occupied} 

# cycle windows
alt + {_,shift + }Tab
    bspc node -f {next,prev}

# Go to specific window
super + Tab
	WindowSelector -y 30
	
#Focus windows by direction, works with multihead
super +  {a,s,w,d}
    focusmover {west,south,north,east}
        	
# Move tiled windows. Moving a tiled window to 
# preselected one moves into preselection instead. 
# Moving out of the screen should move the window to next monitor if possible
super + shift + {a,s,w,d}
	windowgrabber {west,south,north,east}

# Different style of movement: transplant into window in chosen direction
#super + shift + {Left,Down,Up,Right}
#	euclid_mover {west,south,north,east}

#resize windows
super + ctrl + {a,s,w,d}
	bspwm_resize.sh {west,south,north,east}

# Toggle monocle mode
super + f 
	bspc desktop -l next
	
# Balance tree
super + b
	bspc node @/ -B

# Balance brother node. If you do this on biggest window of the desktop, it usually means balancing all windows with except the biggest.
super + alt + b
	bspc node @brother -B
	
# Undo balancing (equalize windows)
super + ctrl + b
	bspc node @/ -E

# Toggle automatic balancing of windows
alt + b
	euclid_balancer

# Mirror and flip leaves of tree
super + {n,m}
	bspc node @/ -F {horizontal,vertical}
	
# Rotate leaves of tree
super + shift + {n,m}
	bspc node @/ -R {90,270}

# Change window gap
super + button{4,5}
	bspc config -d focused window_gap $((`bspc config -d focused window_gap` {+,-} 2 ))

~button1
	DidIClickDesktop.sh && mygtkmenui -- .config/GTKmenu/LaunchMenu

~button2
	DidIClickDesktop.sh && mygtkmenui -- .config/GTKmenu/BspwmWindowMenui
		
~button3
	DidIClickDesktop.sh && mygtkmenui -- .config/GTKmenu/BspwmDesktopMenui

# run applications
super + space
	dmenu_recent -fn 'Iosevka:style=Regular:size=13' -i -l 14 -w 600 -y $PANEL_HEIGHT
#super + shift + space
#	rofi -show &

super + p
	clipmenu -fn 'Iosevka:style=Regular:size=13' -i -l 14 -w 500 -x $((1920-500)) -y $PANEL_HEIGHT

super + v
	default-terminal

ctrl + alt + t
	tdrop -a -w -4 -h 500 -y "$PANEL_HEIGHT" -C 'bspc node -g sticky' xfce4-terminal
	
super + e
	dbus-launch thunar

super + shift + e
	st -f "Iosevka:style=Regular:size=15" ranger

Print
	sleep 0.2; \
	/home/kuba/Scripts/makeScreenshotAndCopyToClipboard.sh; \
	notify-send "Screenshot taken"

ctrl + Print
	sleep 0.2; \
	~/Scripts/makeScreenshotAndSaveToLocation.sh ~/Pictures; \
	notify-send "Screenshot taken and saved to ~/Pictures"

#
# Media keys
#

XF86AudioRaiseVolume
	volume up

XF86AudioLowerVolume
	volume down

XF86AudioMute
	volume mute
	
XF86MonBrightnessDown
	light -U 10

XF86MonBrightnessUp
	light -A 10

XF86Sleep
	systemctl suspend

XF86TouchpadOff
	~/Scripts/setTouchpad.sh off
XF86TouchpadOn
	~/Scripts/setTouchpad.sh on

# make sxhkd reload its configuration files:
#super + shift + Escape
#	pkill -USR1 -x sxhkd

# In case bspwmrc fails to execute/you wish have plugged in a new monitor
#super + shift + r
#	bspwmrc
#edit this file
#alt + ctrl + space
#	$GUI_EDITOR ~/.config/sxhkd/sxhkdrc

# Toggle compositing
super + ctrl + space
	{pkill compton ,\
	compton -b }

# Remove receptacles
super + BackSpace
  for i in $(bspc query -N -n .leaf.!window.local); do bspc node $i -k; done
